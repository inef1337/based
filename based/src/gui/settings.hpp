#pragma once
#include <cstdint>
#include "../../dependencies/imgui/imgui.h"

#include <d3d11.h>
#include <D3DX11tex.h>
#pragma comment(lib, "D3DX11.lib")

namespace based::gui::settings
{
	namespace header
	{
		inline ImVec2 rect_size{ 375.f, 90.f };
		inline ImColor rect_color{ 92, 0, 252, 255 };
		inline ImFont* font{ nullptr };
		inline float text_size{ 60.f };
		inline ImColor text_color{ 255, 255, 255, 255 };
	}

	namespace submenubar
	{
		inline ImVec2 rect_size{ 375.f, 33.f };
		inline ImColor rect_color{ 1, 1, 1, 255 };
		inline ImFont* font{ nullptr };
		inline float text_size{ 16.f };
		inline float description_padding{ 5.f };
		inline float option_count_padding{ 17.f };
		inline ImColor text_color{ 255, 255, 255, 255 };
	}

	namespace option
	{
		inline ImVec2 rect_size{ 375.f, 34.f };
		inline ImColor rect_color_unselected{ 10, 10, 10, 170 };
		inline ImColor rect_color_selected{ 255, 255, 255, 255 };
		inline ImFont* font{ nullptr };
		inline float text_size{ 17.f };
		inline float padding{ 5.f };
		inline ImColor text_color_selected{ 0, 0, 0, 255 };
		inline ImColor text_color_unselected{ 255, 255, 255, 255 };

		//box blank
		inline ImVec2 toggle_size{ 35.f, 35.f };
		inline ImColor toggle_color{ 255, 255, 255, 255 };
		inline D3DX11_IMAGE_LOAD_INFO toggle_image_info{};
		inline ID3DX11ThreadPump* toggle_thread_pump{ nullptr };
		inline ID3D11ShaderResourceView* toggle_image{ nullptr };
		inline ID3D11Texture2D* toggle_logo_texture{ nullptr };
		inline float toggle_padding{ 9.f };

		//box ticked
		inline ImVec2 ticked_toggle_size{ 35.f, 35.f };
		inline ImColor ticked_toggle_color{ 0, 0, 0, 255 };
		inline D3DX11_IMAGE_LOAD_INFO ticked_toggle_image_info{};
		inline ID3DX11ThreadPump* ticked_toggle_thread_pump{ nullptr };
		inline ID3D11ShaderResourceView* ticked_toggle_image{ nullptr };
		inline ID3D11Texture2D* ticked_toggle_logo_texture{ nullptr };
		inline float ticked_toggle_padding{ 5.f };

		//submenu arrow
		inline ImVec2 arrow_size{ 15.f, 15.f };
		inline ImColor arrow_color_selected{ 0, 0, 0, 255 };
		inline ImColor arrow_color_unselected{ 255, 255, 255, 255 };
		inline D3DX11_IMAGE_LOAD_INFO arrow_image_info{};
		inline ID3DX11ThreadPump* arrow_thread_pump{ nullptr };
		inline ID3D11ShaderResourceView* arrow_image{ nullptr };
		inline ID3D11Texture2D* arrow_logo_texture{ nullptr };
		inline float arrow_padding{ 3.f };
	}

	namespace footer
	{
		inline ImVec2 rect_size{ 375.f, 33.f };
		inline ImColor rect_color{ 1, 1, 1, 255 };
		inline ImFont* font{ nullptr };
		inline float text_size{ 17.f };
		inline float padding{ 5.f };
		inline ImColor text_color{ 255, 255, 255, 255 };
		inline ImVec2 arrow_size{ 32.f, 32.f };
		inline ImColor arrow_color{ 255, 255, 255, 255 };
		inline D3DX11_IMAGE_LOAD_INFO image_info{};
		inline ID3DX11ThreadPump* thread_pump{ nullptr };
		inline ID3D11ShaderResourceView* image{ nullptr };
		inline ID3D11Texture2D* logo_texture{ nullptr };
	}

	constexpr std::uint8_t aob_toggle[259] = {
	0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
	0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40,
	0x08, 0x06, 0x00, 0x00, 0x00, 0xAA, 0x69, 0x71, 0xDE, 0x00, 0x00, 0x00,
	0xCA, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9C, 0xED, 0xDA, 0xC1, 0x0D, 0xC2,
	0x50, 0x0C, 0xC0, 0x50, 0x3E, 0xE2, 0x8E, 0xD8, 0x7F, 0x49, 0x36, 0x28,
	0x57, 0x06, 0x48, 0xFB, 0x54, 0x7D, 0x7B, 0x80, 0xC8, 0xB2, 0xD2, 0x1E,
	0xD2, 0xAE, 0xE3, 0x38, 0x1E, 0x3B, 0xF3, 0xD4, 0x02, 0x9A, 0x02, 0x68,
	0x01, 0x4D, 0x01, 0xB4, 0x80, 0xA6, 0x00, 0x5A, 0x40, 0x53, 0x00, 0x2D,
	0xA0, 0x29, 0x80, 0x16, 0xD0, 0x14, 0x40, 0x0B, 0x68, 0x0A, 0xA0, 0x05,
	0x34, 0x05, 0xD0, 0x02, 0x9A, 0xD7, 0xE0, 0xAC, 0xAB, 0x4F, 0x4B, 0x6B,
	0x62, 0xC8, 0xF6, 0x1B, 0xB0, 0x7D, 0x80, 0xC9, 0x47, 0xE0, 0x9F, 0xCF,
	0x5A, 0xEB, 0x3B, 0x3D, 0xF4, 0x38, 0xE1, 0x82, 0xBB, 0xFD, 0x06, 0x14,
	0x40, 0x0B, 0x68, 0x0A, 0xA0, 0x05, 0x34, 0x05, 0xD0, 0x02, 0x9A, 0x02,
	0x68, 0x01, 0x4D, 0x01, 0xB4, 0x80, 0xA6, 0x00, 0x5A, 0x40, 0x53, 0x00,
	0x2D, 0xA0, 0x29, 0x80, 0x16, 0xD0, 0x14, 0x40, 0x0B, 0x68, 0xB6, 0x0F,
	0x70, 0xD6, 0x51, 0xF4, 0x7D, 0x97, 0x3F, 0x50, 0xD7, 0xA0, 0x68, 0x1F,
	0x46, 0xEE, 0xC8, 0xF6, 0x01, 0x26, 0xDF, 0x01, 0x23, 0x2B, 0x79, 0x35,
	0xDB, 0x6F, 0x40, 0x01, 0xB4, 0x80, 0xA6, 0x00, 0x5A, 0x40, 0x53, 0x00,
	0x2D, 0xA0, 0x29, 0x80, 0x16, 0xD0, 0x14, 0x40, 0x0B, 0x68, 0x0A, 0xA0,
	0x05, 0x34, 0x05, 0xD0, 0x02, 0x9A, 0x02, 0x68, 0x01, 0xCD, 0x0F, 0x0C,
	0xD8, 0x10, 0x8E, 0x45, 0xDA, 0xD9, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x49,
	0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
	};

	constexpr std::uint8_t aob_ticked_toggle[850] = {
	0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
	0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40,
	0x08, 0x06, 0x00, 0x00, 0x00, 0xAA, 0x69, 0x71, 0xDE, 0x00, 0x00, 0x02,
	0x5A, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9C, 0xED, 0x9A, 0xCD, 0x6A, 0xDB,
	0x40, 0x14, 0x85, 0xAF, 0x8B, 0x0B, 0x12, 0xA4, 0x10, 0x2D, 0x0A, 0x4D,
	0xF6, 0xDD, 0x98, 0x6C, 0xFC, 0x24, 0xA1, 0x72, 0xB5, 0xB1, 0x5A, 0x10,
	0x14, 0xF2, 0x54, 0x0E, 0x81, 0x26, 0x69, 0x8B, 0x40, 0xAE, 0x51, 0x92,
	0x12, 0x0A, 0xD9, 0x74, 0x91, 0x65, 0x36, 0x7D, 0x8F, 0x64, 0x61, 0xA3,
	0x09, 0xA4, 0x70, 0xBA, 0x90, 0x15, 0xD7, 0xB1, 0xD4, 0x3A, 0xEE, 0xC4,
	0x67, 0x64, 0xCF, 0x81, 0xBB, 0x19, 0x8F, 0x34, 0xE7, 0x7E, 0xF3, 0x23,
	0xCD, 0xC8, 0x0D, 0x00, 0xB2, 0xCE, 0x7A, 0xC6, 0x36, 0xC0, 0x96, 0x05,
	0xC0, 0x36, 0xC0, 0x96, 0x05, 0xC0, 0x36, 0xC0, 0x96, 0x05, 0xC0, 0x36,
	0xC0, 0x96, 0x05, 0xC0, 0x36, 0xC0, 0x96, 0x05, 0xC0, 0x36, 0xC0, 0x96,
	0x05, 0xC0, 0x36, 0xC0, 0x96, 0x05, 0xC0, 0x36, 0xC0, 0x96, 0x05, 0xC0,
	0x36, 0xC0, 0x56, 0x53, 0xE3, 0xBD, 0x96, 0x7D, 0xB4, 0xD4, 0xD0, 0x71,
	0x93, 0xB5, 0x1F, 0x01, 0x16, 0x00, 0xDB, 0x00, 0x5B, 0xC6, 0x02, 0x38,
	0x4D, 0x4F, 0x65, 0xEF, 0xC3, 0xDE, 0x93, 0xB7, 0xD3, 0xD0, 0x78, 0x2C,
	0xAE, 0x75, 0x11, 0xDC, 0x7E, 0xB9, 0x2D, 0x10, 0x48, 0xAB, 0xDD, 0x92,
	0x8B, 0xEF, 0x17, 0x65, 0x55, 0xB4, 0x2C, 0x82, 0x02, 0x40, 0x57, 0x68,
	0x91, 0x52, 0x0A, 0xBE, 0xEF, 0x43, 0x72, 0xA0, 0xF0, 0x5E, 0x78, 0xD8,
	0xDC, 0xD8, 0xC4, 0xA0, 0x3F, 0x78, 0x58, 0x55, 0x8B, 0x6F, 0xE3, 0xA6,
	0x40, 0x18, 0x86, 0xD2, 0xEF, 0xF7, 0x27, 0x05, 0xE3, 0x71, 0x35, 0xF8,
	0x3A, 0x78, 0x9A, 0x06, 0x4D, 0x1A, 0x01, 0x49, 0x92, 0xDC, 0xF7, 0x7C,
	0x11, 0xDE, 0x86, 0x87, 0xE8, 0x7D, 0x54, 0x56, 0x5D, 0x8B, 0x6F, 0x63,
	0x00, 0x24, 0x49, 0x02, 0xC7, 0x71, 0x4A, 0x01, 0x54, 0x48, 0x8B, 0x6F,
	0xFA, 0x22, 0x78, 0x3B, 0xBA, 0x15, 0x11, 0x11, 0xD7, 0x73, 0xF3, 0x82,
	0x5F, 0xD3, 0xBF, 0x5F, 0xFD, 0xBC, 0x92, 0xF6, 0x4E, 0xBB, 0xEC, 0xD2,
	0xD5, 0x79, 0x13, 0x0C, 0xA3, 0xB0, 0xB4, 0x3C, 0x8E, 0xE3, 0xAA, 0xE4,
	0xF5, 0x89, 0x3D, 0x05, 0x3A, 0x6F, 0x3B, 0x90, 0xA6, 0x4C, 0x62, 0x3C,
	0xF4, 0x83, 0x20, 0xF8, 0xD7, 0xA5, 0xE6, 0xAF, 0x01, 0xA3, 0x6C, 0x84,
	0xCB, 0x1F, 0x97, 0x95, 0x19, 0xF4, 0xF6, 0x7B, 0xD3, 0xC9, 0x37, 0xE7,
	0x4E, 0xDE, 0x60, 0x00, 0x77, 0x93, 0x08, 0x3A, 0x01, 0x44, 0x04, 0x47,
	0x1F, 0x8F, 0xA0, 0x86, 0x2A, 0x0F, 0x95, 0xC7, 0xF1, 0xA7, 0xE3, 0xA9,
	0x1E, 0x2F, 0xA2, 0xF5, 0xBA, 0x35, 0x4F, 0xF2, 0xE6, 0x03, 0x88, 0xBF,
	0xC4, 0x53, 0x89, 0xF9, 0x6F, 0x7C, 0x64, 0xC3, 0x0C, 0x4A, 0x29, 0x64,
	0x59, 0x36, 0x33, 0xE4, 0x8B, 0x38, 0xFF, 0x76, 0x5E, 0x7F, 0x00, 0xF1,
	0xE7, 0x78, 0x26, 0xB1, 0x02, 0x82, 0x52, 0x0A, 0x7E, 0xE0, 0x97, 0x02,
	0x88, 0xE3, 0x78, 0xDE, 0xE4, 0xEB, 0x09, 0x40, 0x44, 0x4A, 0xE7, 0xFC,
	0x23, 0xE6, 0x7D, 0x0D, 0x00, 0x8C, 0x75, 0x92, 0x9E, 0x60, 0xEB, 0xD5,
	0x16, 0xE4, 0x79, 0x79, 0xC2, 0x45, 0xB8, 0xAE, 0x8B, 0x6E, 0xB7, 0xFB,
	0xD8, 0xE4, 0xCD, 0x07, 0x00, 0x00, 0x69, 0x9A, 0x56, 0xF6, 0x78, 0x11,
	0x8E, 0xE3, 0x2C, 0x92, 0x7C, 0x3D, 0x00, 0x00, 0xC0, 0xCD, 0xF0, 0x06,
	0xBB, 0x9D, 0xDD, 0x4A, 0x00, 0x49, 0x92, 0xAC, 0x3E, 0x80, 0xEB, 0xE1,
	0x35, 0x0E, 0x0E, 0x0F, 0x66, 0x00, 0xF4, 0xF6, 0x7B, 0x8B, 0x26, 0x5F,
	0x1F, 0x00, 0x7F, 0xEA, 0x2C, 0x3D, 0xBB, 0xDF, 0xDF, 0x47, 0xEF, 0xA2,
	0xFC, 0x91, 0xB9, 0x4E, 0x00, 0x00, 0x00, 0x77, 0x40, 0x14, 0x46, 0x93,
	0x17, 0xA6, 0xC5, 0xA5, 0xC5, 0xF7, 0xF2, 0x77, 0x83, 0x0F, 0x76, 0x7B,
	0xFF, 0xF1, 0x65, 0x62, 0x05, 0x76, 0x83, 0x06, 0xFC, 0x4B, 0x57, 0xE7,
	0x97, 0x21, 0x53, 0x5B, 0xFC, 0xAB, 0x8C, 0x38, 0x0F, 0x60, 0x4A, 0x67,
	0x7F, 0xE8, 0x39, 0xA6, 0x5E, 0xB2, 0xD6, 0x7E, 0x04, 0x58, 0x00, 0x6C,
	0x03, 0x6C, 0x59, 0x00, 0x6C, 0x03, 0x6C, 0x59, 0x00, 0x6C, 0x03, 0x6C,
	0x59, 0x00, 0x6C, 0x03, 0x6C, 0x59, 0x00, 0x6C, 0x03, 0x6C, 0x59, 0x00,
	0x6C, 0x03, 0x6C, 0x59, 0x00, 0x6C, 0x03, 0x6C, 0x59, 0x00, 0x6C, 0x03,
	0x6C, 0xFD, 0x06, 0x09, 0x22, 0xBD, 0xD5, 0xAA, 0xD8, 0xF5, 0x02, 0x00,
	0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
	};

	constexpr std::uint8_t aob_footer_arrows[565] = {
		0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
		0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40,
		0x08, 0x06, 0x00, 0x00, 0x00, 0xAA, 0x69, 0x71, 0xDE, 0x00, 0x00, 0x01,
		0xFC, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9C, 0xED, 0x9A, 0x31, 0x72, 0xC2,
		0x30, 0x14, 0x44, 0xBF, 0x32, 0xA9, 0xA9, 0x29, 0x38, 0x04, 0xA9, 0x28,
		0xD3, 0x39, 0x57, 0xC9, 0x2D, 0x38, 0x06, 0x39, 0x0B, 0x55, 0x28, 0xD3,
		0xE1, 0xA3, 0x90, 0x0B, 0x6C, 0x0A, 0xBE, 0x27, 0xC6, 0x63, 0x45, 0xB2,
		0x23, 0xFD, 0xB5, 0xC6, 0x7A, 0x33, 0x2A, 0x30, 0x46, 0xEC, 0x3E, 0x98,
		0xB1, 0xA5, 0xB1, 0x03, 0x20, 0x6B, 0xE6, 0x89, 0x1D, 0x80, 0x4D, 0x15,
		0xC0, 0x0E, 0xC0, 0xA6, 0x0A, 0x60, 0x07, 0x60, 0x53, 0x05, 0xB0, 0x03,
		0xB0, 0xA9, 0x02, 0xD8, 0x01, 0xD8, 0x54, 0x01, 0xEC, 0x00, 0x6C, 0x56,
		0x2F, 0xE0, 0x39, 0xF5, 0x84, 0xCE, 0xB9, 0xE8, 0x73, 0x01, 0xEC, 0xF5,
		0x33, 0xD7, 0x09, 0x9F, 0x99, 0x91, 0xCA, 0x0F, 0xED, 0x1F, 0x00, 0xE0,
		0x45, 0x44, 0x2E, 0x22, 0x72, 0xE9, 0x44, 0x30, 0xA0, 0x08, 0xD0, 0xC2,
		0x9F, 0x22, 0xB2, 0xD1, 0x41, 0x93, 0x60, 0x2E, 0x00, 0xC0, 0x41, 0xEE,
		0xBF, 0xFC, 0xA6, 0x77, 0xB8, 0x93, 0x70, 0xB0, 0xCE, 0x63, 0x2A, 0x40,
		0x0B, 0x9E, 0xE5, 0xB1, 0x7C, 0xC7, 0x46, 0x44, 0xCE, 0xD6, 0x12, 0xCC,
		0x04, 0x04, 0xCA, 0x77, 0x98, 0x4B, 0x30, 0x11, 0x10, 0x59, 0xBE, 0xC3,
		0x54, 0x42, 0x76, 0x01, 0x81, 0xF2, 0x1F, 0x3A, 0x86, 0xD8, 0x49, 0x00,
		0x90, 0x74, 0x0C, 0xE6, 0x3E, 0x00, 0xB8, 0x61, 0x9C, 0x13, 0x00, 0xA7,
		0xE3, 0xE4, 0x39, 0xE7, 0x36, 0x94, 0x90, 0x3C, 0x6F, 0x2E, 0x01, 0x31,
		0xE5, 0x7B, 0xE7, 0x46, 0x4B, 0x28, 0x42, 0xC0, 0x94, 0xF2, 0x53, 0x25,
		0x2C, 0x5E, 0x00, 0x80, 0x37, 0x4F, 0x09, 0x6F, 0xF9, 0x48, 0x09, 0x00,
		0xD0, 0x94, 0x20, 0xA0, 0x9D, 0x53, 0x3E, 0x52, 0x42, 0x5B, 0x82, 0x80,
		0xED, 0x88, 0x84, 0xA8, 0xF2, 0x01, 0x09, 0xAD, 0xCE, 0xBD, 0x6C, 0x01,
		0x5A, 0xA0, 0x2F, 0x61, 0x52, 0x79, 0x8F, 0x84, 0x2B, 0x80, 0xAD, 0x1E,
		0x5F, 0xBE, 0x00, 0x0D, 0xBA, 0x03, 0x70, 0x9C, 0x53, 0x7E, 0x20, 0xE1,
		0x08, 0x60, 0xD7, 0x3B, 0x96, 0x74, 0xB8, 0x7E, 0xE8, 0x14, 0x4C, 0xD9,
		0x0F, 0x98, 0x43, 0xEA, 0xBC, 0xAB, 0xDF, 0x11, 0xAA, 0x02, 0xD8, 0x01,
		0xD8, 0x54, 0x01, 0xEC, 0x00, 0x6C, 0xB2, 0x09, 0xC8, 0x75, 0x19, 0x4C,
		0x4E, 0x21, 0x37, 0x42, 0x6D, 0x31, 0x37, 0x42, 0x5A, 0xFE, 0x8A, 0x47,
		0xD6, 0x73, 0x2B, 0x8C, 0xBA, 0x18, 0x42, 0xE3, 0x09, 0x1F, 0x94, 0x10,
		0x28, 0x0F, 0x94, 0xB0, 0x1C, 0xD6, 0x22, 0xEB, 0xDD, 0x10, 0xE9, 0x15,
		0x5A, 0xEF, 0x96, 0xD8, 0x14, 0x09, 0x53, 0xCA, 0xE7, 0x10, 0x90, 0x7D,
		0x35, 0x88, 0xF0, 0xB6, 0xB8, 0x88, 0xC8, 0xFB, 0xC8, 0x7B, 0xDF, 0x22,
		0xD2, 0x38, 0xE7, 0xBE, 0x06, 0xF3, 0x25, 0x48, 0xF9, 0x8B, 0xC9, 0x72,
		0x38, 0x20, 0x61, 0x8C, 0xD1, 0xF2, 0x3A, 0xD7, 0xBF, 0xF2, 0x0D, 0x31,
		0xB9, 0x15, 0xD6, 0x22, 0x8D, 0xDC, 0x8B, 0x85, 0xF0, 0x96, 0xCF, 0x81,
		0xD9, 0x5A, 0x20, 0x52, 0x82, 0x69, 0x79, 0x11, 0xE3, 0xC5, 0x50, 0x40,
		0x82, 0x79, 0x79, 0x11, 0xC9, 0x7B, 0x15, 0xF8, 0xE3, 0x3B, 0xF7, 0x83,
		0xAB, 0xC3, 0x0D, 0xF7, 0x27, 0x46, 0xCC, 0xF3, 0xD2, 0xF6, 0x04, 0x71,
		0x7F, 0x22, 0xE4, 0xA2, 0x2F, 0x5F, 0x63, 0x9F, 0x13, 0x2A, 0xF2, 0x2A,
		0xE0, 0x03, 0x0B, 0x78, 0x48, 0x2A, 0xB9, 0x80, 0xD2, 0xA8, 0x3B, 0x42,
		0xEC, 0x00, 0x6C, 0xAA, 0x00, 0x76, 0x00, 0x36, 0x55, 0x00, 0x3B, 0x00,
		0x9B, 0x2A, 0x80, 0x1D, 0x80, 0x4D, 0x15, 0xC0, 0x0E, 0xC0, 0xA6, 0x0A,
		0x60, 0x07, 0x60, 0xF3, 0x03, 0xC4, 0xB2, 0x7A, 0xF4, 0xD7, 0x94, 0xE8,
		0xA1, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60,
		0x82
	};

	constexpr std::uint8_t aob_submenu_arrow[464] = {
	0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
	0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40,
	0x08, 0x06, 0x00, 0x00, 0x00, 0xAA, 0x69, 0x71, 0xDE, 0x00, 0x00, 0x00,
	0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0B, 0x13, 0x00, 0x00, 0x0B,
	0x13, 0x01, 0x00, 0x9A, 0x9C, 0x18, 0x00, 0x00, 0x00, 0x20, 0x63, 0x48,
	0x52, 0x4D, 0x00, 0x00, 0x7A, 0x25, 0x00, 0x00, 0x80, 0x83, 0x00, 0x00,
	0xF9, 0xFF, 0x00, 0x00, 0x80, 0xE9, 0x00, 0x00, 0x75, 0x30, 0x00, 0x00,
	0xEA, 0x60, 0x00, 0x00, 0x3A, 0x98, 0x00, 0x00, 0x17, 0x6F, 0x92, 0x5F,
	0xC5, 0x46, 0x00, 0x00, 0x01, 0x56, 0x49, 0x44, 0x41, 0x54, 0x78, 0xDA,
	0xE4, 0xD7, 0x31, 0x0E, 0xC2, 0x40, 0x0C, 0x44, 0x51, 0xE7, 0x64, 0x70,
	0x94, 0x70, 0x32, 0xE0, 0xA4, 0xA1, 0xA1, 0xA0, 0x40, 0x28, 0xC9, 0xDA,
	0x33, 0xDF, 0x4B, 0x2A, 0x2A, 0xA4, 0xFF, 0xA4, 0xDD, 0xB5, 0x97, 0x6D,
	0xDB, 0xA2, 0xE0, 0x5B, 0x23, 0xE2, 0x12, 0x11, 0xB7, 0x80, 0x7F, 0x4B,
	0x01, 0xC0, 0x1A, 0x11, 0xF7, 0xF7, 0xEF, 0x07, 0x1D, 0x21, 0x1B, 0xE0,
	0x33, 0x3E, 0x3A, 0x20, 0x64, 0x02, 0x7C, 0x8B, 0xC7, 0x23, 0x64, 0x01,
	0xFC, 0x8A, 0x47, 0x23, 0x64, 0x00, 0xEC, 0x89, 0xC7, 0x22, 0x8C, 0x02,
	0x1C, 0x89, 0x47, 0x22, 0x8C, 0x00, 0x9C, 0x89, 0xC7, 0x21, 0xB8, 0x00,
	0x30, 0x08, 0x8E, 0x23, 0x80, 0x42, 0x50, 0x5F, 0x82, 0x38, 0x04, 0xE5,
	0x33, 0x88, 0x44, 0x50, 0x0D, 0x42, 0x58, 0x04, 0xC5, 0x28, 0x8C, 0x46,
	0xA8, 0x5E, 0x86, 0xF0, 0x08, 0x4B, 0xE1, 0x3A, 0xDC, 0x02, 0xA1, 0x0A,
	0xA0, 0x0D, 0x42, 0x25, 0x40, 0x0B, 0x84, 0x6A, 0x00, 0x3C, 0x82, 0x02,
	0x00, 0x8D, 0xA0, 0x02, 0xC0, 0x22, 0x28, 0x01, 0x90, 0x08, 0x6A, 0x00,
	0x1C, 0x82, 0x03, 0x00, 0x85, 0xE0, 0x02, 0xC0, 0x20, 0x38, 0x01, 0x10,
	0x08, 0x6E, 0x00, 0x3B, 0x02, 0x01, 0xC0, 0x8A, 0x40, 0x01, 0xB0, 0x21,
	0x90, 0x00, 0x2C, 0x08, 0x34, 0x00, 0x39, 0x02, 0x11, 0x40, 0x8A, 0x30,
	0x2B, 0xC0, 0xF3, 0xFD, 0x1F, 0x7F, 0x79, 0x04, 0x76, 0xC7, 0xCF, 0x78,
	0x09, 0x1E, 0x8A, 0x9F, 0xED, 0x19, 0x3C, 0x1C, 0x3F, 0xD3, 0x20, 0x74,
	0x2A, 0x7E, 0x96, 0x51, 0xF8, 0x74, 0xFC, 0x0C, 0xCB, 0xD0, 0x50, 0x7C,
	0xF7, 0x75, 0x78, 0x38, 0xDE, 0x09, 0x80, 0x88, 0x77, 0x01, 0x60, 0xE2,
	0x1D, 0x00, 0xA8, 0x78, 0x35, 0x00, 0x2E, 0x5E, 0x09, 0x80, 0x8C, 0x57,
	0x01, 0x60, 0xE3, 0x15, 0x00, 0xE8, 0xF8, 0x6A, 0x00, 0x7C, 0x7C, 0x25,
	0x40, 0x8B, 0xF8, 0x2A, 0x80, 0x36, 0xF1, 0x15, 0x00, 0xAD, 0xE2, 0xB3,
	0x01, 0xDA, 0xC5, 0x67, 0x02, 0xB4, 0x8C, 0xCF, 0x02, 0x68, 0x1B, 0x9F,
	0x01, 0xD0, 0x3A, 0x7E, 0x14, 0xA0, 0x7D, 0xBC, 0x13, 0x00, 0x11, 0xEF,
	0x3A, 0x02, 0x98, 0x78, 0xC7, 0x25, 0x88, 0x8A, 0x57, 0x3F, 0x83, 0xB8,
	0x78, 0xE5, 0x20, 0x84, 0x8C, 0x57, 0x8D, 0xC2, 0xD8, 0x78, 0xC5, 0x32,
	0x84, 0x8E, 0xAF, 0x5E, 0x87, 0xAF, 0xF4, 0xF8, 0x88, 0x88, 0xD7, 0x00,
	0xD6, 0x48, 0x3D, 0x90, 0x67, 0xB7, 0x46, 0x09, 0x00, 0x00, 0x00, 0x00,
	0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
	};

}